import xbmc, xbmcaddon, xbmcgui, xbmcplugin, urllib, urllib2, os, re, sys, datetime, shutilfrom resources.libs.common_addon import Addonaddon_id = 'plugin.video.ninjaville'addon = Addon(addon_id, sys.argv)fanart = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'fanart.jpg'))icon = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.PNG'))thumb = 'http://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Big_Buck_Bunny_first_23_seconds_1080p.ogv/mid-Big_Buck_Bunny_first_23_seconds_1080p.ogv.jpg'opener = urllib2.build_opener()opener.addheaders = [('User-agent', 'Mozilla/5.0')]#List of Directoriesdef INDEX():    addDir('Latest', 'url', 2, thumb, '', fanart)    addDir('Search Anime', 'url', 5, thumb, '', fanart)def getusersearch():    kb = xbmc.Keyboard('default', 'heading')    kb.setDefault('')    kb.setHeading('Enter The Name For An Anime')    kb.setHiddenInput(False)    kb.doModal()    if (kb.isConfirmed()):        search_term = kb.getText()        return (search_term)    else:        return        mode = args.get('mode', None)def search_anime():    anime_name = getusersearch()    anime_name = anime_name.lower()    if len(anime_name.split()) == 2:        anime_name = anime_name.split()[0] + "-" + anime_name.split()[1]    if len(anime_name.split()) == 3:        anime_name = anime_name.split()[0] + "-" + anime_name.split()[1] + "-" + anime_name.split()[2]    if len(anime_name.split()) == 4:        anime_name = anime_name.split()[0] + "-" + anime_name.split()[1] + "-" + anime_name.split()[2] + "-" + \                     anime_name.split()[3]    if len(anime_name.split()) == 5:        anime_name = anime_name.split()[0] + "-" + anime_name.split()[1] + "-" + anime_name.split()[2] + "-" + \                     anime_name.split()[3] + "-" + anime_name.split()[4]    html_data = opener.open("https://www.animefreak.tv/home/anime-list").read()    show_links = re.findall(r'<li><a href="(.*?)"', html_data)    show_names = []    covers = []    matching = [s for s in show_links if anime_name in s]    for row in matching:            show_name = re.findall('<li><a href="'+ row + '">(.*?)</a></li>', html_data)            if show_name:                show_names.append(show_name[0])    for row in matching:        html = opener.open(row).read()        cover_list = re.findall('" src="(.*?)">', html)        for row in cover_list:                if '/meta/anime' in row:                        covers.append(row)    for row in range(len(covers)):        addDir(show_names[row], matching[row], 3, covers[row], '', fanart)def load_anime(url):    html_data = opener.open(url).read()    if 'movie' not in url:        episode_num = re.findall('<a href="(.*?)">', html_data)        episode_num_len = []        for row in episode_num:            if url + "/episode/episode-" in row:                episode_num_len.append(row)        episode_num_len[0] += "code6969"        episode_range = re.findall("/episode/episode-(.*?)code6969", episode_num_len[0])[0]        episode_range = int(episode_range) + 1        for index in range(1, episode_range):            addDir('Episode Number ' + str(index), url + "/episode/episode-" + str(index), 4, thumb, '', fanart)    else:        movie_name = re.findall('<li><a href="'+ url +'">(.*?)</a></li>', html_data)[0]        movie_link = re.findall('<a href="(.*?)">', html_data)        movie_link_list = []        for row in movie_link:            if '/episode/movie' in row:                movie_link_list.append(row)        html = opener.open(movie_link_list[0]).read()        mp4_link = re.findall('var file = "(.*?)"', html)[0]        link1 = mp4_link        if len(link1.split()) == 2:            link1 = link1.split()[0] + '%20' + link1.split()[1]        if len(link1.split()) == 3:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2]        if len(link1.split()) == 4:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[3]        if len(link1.split()) == 5:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4]        if len(link1.split()) == 6:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5]        if len(link1.split()) == 7:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6]        if len(link1.split()) == 8:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7]        if len(link1.split()) == 9:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8]        if len(link1.split()) == 10:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9]        if len(link1.split()) == 11:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9] + '%20' + link1.split()[10]        if len(link1.split()) == 12:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9] + '%20' + link1.split()[                        10] + '%20' + link1.split()[11]        if len(link1.split()) == 13:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9] + '%20' + link1.split()[                        10] + '%20' + link1.split()[11] + '%20' + link1.split()[12]        addLink('Movie Name: '+ movie_name, link1,1,thumb,'',fanart)def load_anime_episode(url):    html_data = opener.open(url).read()    mp4_link = re.findall('var file = "(.*?)"', html_data)[0]    url += "code6969"    episode_number = re.findall("/episode/episode-(.*?)code6969", url)[0]    link1 = mp4_link    if len(link1.split()) == 2:            link1 = link1.split()[0] + '%20' + link1.split()[1]    if len(link1.split()) == 3:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2]    if len(link1.split()) == 4:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[3]    if len(link1.split()) == 5:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4]    if len(link1.split()) == 6:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5]    if len(link1.split()) == 7:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6]    if len(link1.split()) == 8:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7]    if len(link1.split()) == 9:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8]    if len(link1.split()) == 10:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9]    if len(link1.split()) == 11:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9] + '%20' + link1.split()[10]    if len(link1.split()) == 12:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9] + '%20' + link1.split()[                            10] + '%20' + link1.split()[11]    if len(link1.split()) == 13:            link1 = link1.split()[0] + '%20' + link1.split()[1] + '%20' + link1.split()[2] + '%20' + link1.split()[                    3] + '%20' + link1.split()[4] + '%20' + link1.split()[5] + '%20' + link1.split()[6] + '%20' + \                    link1.split()[7] + '%20' + link1.split()[8] + '%20' + link1.split()[9] + '%20' + link1.split()[                            10] + '%20' + link1.split()[11] + '%20' + link1.split()[12]    addLink("Episode Number:- " + episode_number, link1, 1, thumb, '', thumb)def latest():    html_data = opener.open("https://www.animefreak.tv").read()    show_links = re.findall('<a href="(.*?)" class="nli-serie">', html_data)    show_names = re.findall('" class="nli-serie">(.*?)</a>', html_data)    covers = re.findall('" src="(.*?)">', html_data)    covers_list = []    for row in covers:        if '/meta/anime/' in row:            covers_list.append(row)    for row in range(len(covers_list)):        addDir(show_names[row], show_links[row], 3, covers_list[row], '', fanart)def PLAYLINK(name, url):    ok = True    liz = xbmcgui.ListItem(name, iconImage=icon, thumbnailImage=icon);    liz.setInfo(type="Video", infoLabels={"Title": name})    ok = xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=url, listitem=liz)    xbmc.Player().play(url, liz, False)def get_params():    param = []    paramstring = sys.argv[2]    if len(paramstring) >= 2:        params = sys.argv[2]        cleanedparams = params.replace('?', '')        if (params[len(params) - 1] == '/'):            params = params[0:len(params) - 2]        pairsofparams = cleanedparams.split('&')        param = {}        for i in range(len(pairsofparams)):            splitparams = {}            splitparams = pairsofparams[i].split('=')            if (len(splitparams)) == 2:                param[splitparams[0]] = splitparams[1]    return paramdef addDir(name, url, mode, iconimage, description, fanart):    u = sys.argv[0] + "?url=" + urllib.quote_plus(url) + "&mode=" + str(mode) + "&name=" + urllib.quote_plus(        name) + "&description=" + str(description)    ok = True    liz = xbmcgui.ListItem(name, iconImage="DefaultFolder.png", thumbnailImage=iconimage)    liz.setInfo(type="Video", infoLabels={"Title": name, 'plot': description})    liz.setProperty('fanart_image', fanart)    ok = xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=u, listitem=liz, isFolder=True)    return okdef addLink(name, url, mode, iconimage, description, fanart):    u = sys.argv[0] + "?url=" + urllib.quote_plus(url) + "&mode=" + str(mode) + "&name=" + urllib.quote_plus(        name) + "&description=" + str(description)    ok = True    liz = xbmcgui.ListItem(name, iconImage="DefaultFolder.png", thumbnailImage=iconimage)    liz.setInfo(type="Video", infoLabels={"Title": name, 'plot': description})    liz.setProperty('fanart_image', fanart)    ok = xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=u, listitem=liz, isFolder=False)    return okparams = get_params();url = None;name = None;mode = None;site = Nonetry:    site = urllib.unquote_plus(params["site"])except:    passtry:    url = urllib.unquote_plus(params["url"])except:    passtry:    name = urllib.unquote_plus(params["name"])except:    passtry:    mode = int(params["mode"])except:    passprint"Site: " + str(site);print"Mode: " + str(mode);print"URL: " + str(url);print"Name: " + str(name)if mode == None or url == None or len(url) < 1:    INDEX()elif mode == 1:    PLAYLINK(name, url)elif mode == 2:    latest()elif mode == 3:    load_anime(url)elif mode == 4:    load_anime_episode(url)elif mode == 5:    search_anime()xbmcplugin.endOfDirectory(int(sys.argv[1]))